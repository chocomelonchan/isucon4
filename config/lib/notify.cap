namespace :notify do
  class NotifyException < StandardError; end
  def notify_idobata(msg)
    puts "notify to idobata #sketch"
    puts revision_log_message
    begin
      require 'uri'
      require 'net/https'
      Net::HTTP.version_1_2
      https = Net::HTTP.new('idobata.io', 443)
      https.use_ssl = true
      req = Net::HTTP::Post.new('https://idobata.io/hook/custom/1a49caad-d0c8-4cc5-9157-e6e60366a828')
      req.set_form_data({"source" => msg, "format" => 'html'})
      res = https.request(req)
    rescue NotifyException => e
      raise e.message
    rescue => e
      warn e.message
    end
  end

  def deploy_label_branch()
    "<span style='color:white' class='label label-primary'>#{fetch(:branch)}</span>"
  end

  def deploy_link_diff()
    if fetch(:current_revision) != fetch(:previous_revision)
      "<a href='https://github.com/chocomelonchan/isucon4/compare/#{fetch(:previous_revision)}...#{fetch(:current_revision)}' style='color:white' class='label label-success'>diff</a>"
    end
  end

  task :start do
    deploy_message = "@choco_biimu #{deploy_label_branch} #{ENV['USER']}がデブロイはじめたっぽい"
    notify_idobata(deploy_message)
  end

  task :finish do
    deploy_message = "@choco_biimu #{deploy_label_branch} #{deploy_link_diff} #{ENV['USER']}のデブロイ終わったっぽい"
    notify_idobata(deploy_message)
  end
end
